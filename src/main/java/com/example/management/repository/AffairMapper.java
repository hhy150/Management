package com.example.management.repository;

import com.example.management.entity.Affair;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

@Mapper
public interface AffairMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table affair
     *
     * @mbg.generated Fri Jul 17 19:04:15 CST 2020
     */
    @Update({
        "update affair",
        "set is_deleted = #{1,jdbcType=BIT}",
            "where id = #{id,jdbcType=BIGINT}"
    })
    boolean deleteByPrimaryKey(int id);

    @Update({
            "update affair",
            "set is_deleted = 0",
            "where id = #{id,jdbcType=BIGINT}"
    })
    boolean UndeleteByPrimaryKey(int id);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table affair
     *
     * @mbg.generated Fri Jul 17 19:04:15 CST 2020
     */
    @Insert({
        "insert into affair (id, end_time, ",
        "start_time, title, ",
        "content, is_OK, type, ",
        "is_deleted)",
        "values (#{id,jdbcType=BIGINT}, #{endTime,jdbcType=TIMESTAMP}, ",
        "#{startTime,jdbcType=TIMESTAMP}, #{title,jdbcType=VARCHAR}, ",
        "#{content,jdbcType=VARCHAR}, #{isOk,jdbcType=BIT}, #{type,jdbcType=INTEGER}, ",
        "#{isDeleted,jdbcType=BIT})"
    })
    boolean insert(Affair record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table affair
     *
     * @mbg.generated Fri Jul 17 19:04:15 CST 2020
     */
    @Select({
        "select",
        "id, end_time, start_time, title, content, is_OK, type, is_deleted",
        "from affair",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="end_time", property="endTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="start_time", property="startTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_OK", property="isOk", jdbcType=JdbcType.BIT),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="is_deleted", property="isDeleted", jdbcType=JdbcType.BIT)
    })
    Affair selectByPrimaryKey(int id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table affair
     *
     * @mbg.generated Fri Jul 17 19:04:15 CST 2020
     */
    @Select({
        "select",
        "id, end_time, start_time, title, content, is_OK, type, is_deleted",
        "from affair"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="end_time", property="endTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="start_time", property="startTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_OK", property="isOk", jdbcType=JdbcType.BIT),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="is_deleted", property="isDeleted", jdbcType=JdbcType.BIT)
    })
    List<Affair> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table affair
     *
     * @mbg.generated Fri Jul 17 19:04:15 CST 2020
     */
    @Update({
        "update affair",
        "set end_time = #{endTime,jdbcType=TIMESTAMP},",
          "start_time = #{startTime,jdbcType=TIMESTAMP},",
          "title = #{title,jdbcType=VARCHAR},",
          "content = #{content,jdbcType=VARCHAR},",
          "is_OK = #{isOk,jdbcType=BIT},",
          "type = #{type,jdbcType=INTEGER},",
          "is_deleted = #{isDeleted,jdbcType=BIT}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    boolean updateByPrimaryKey(Affair affair);
}